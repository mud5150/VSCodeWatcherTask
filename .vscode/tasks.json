{
    "version": "2.0.0",
    "windows": {
        "options": {
        "shell": {
            "executable": "powershell.exe",
            "args": [ "-NoProfile", "-ExecutionPolicy", "Bypass", "-Command" ]
        }
        }
    },
    "linux": {
        "options": {
        "shell": {
            "executable": "/usr/bin/pwsh",
            "args": [ "-NoProfile", "-Command" ]
        }
        }
    },
    "osx": {
        "options": {
        "shell": {
            "executable": "/usr/local/bin/pwsh",
            "args": [ "-NoProfile", "-Command" ]
        }
        }
    },
    "tasks": [
        {
            "label": "Watch.Project.Single",
            "type": "shell",
            "command": [
                "Write-Host 'Watching Single Project Files';",
                "Import-Module -Name Pester;",
                "Import-Module -Name PowerShellGuard;",
                "(gci \"${workspaceRoot}\\${workspaceRootFolderName}\\*.ps1\" -recurse).Foreach{ New-Guard -Path $_.FullName -TestPath \"${workspaceRoot}\\Tests\\$($_.basename).Tests.ps1\" -TestCommand {Write-Host \"Invoking Watch.Project.Single\"; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true}} -ErrorAction SilentlyContinue};",
                "(gci \"${workspaceRoot}\\Tests\\*.ps1\").Foreach{ New-Guard -Path $_.FullName -TestPath $_.FullName -TestCommand {Write-Host \"Invoking Watch.Project.Single\"; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true}} -ErrorAction SilentlyContinue};",
                "Wait-Guard"
            ],
            "isBackground": true,
            "problemMatcher": [
                {
                    "owner": "Watch.Project.Single",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                            "message": 1
                        },
                        {
                            "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                            "file": 1,
                            "line": 2
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^Invoking Watch\\.Project\\.Single$",
                        "endsPattern": "^Tests\\sPassed:\\s\\d+,\\sFailed:\\s\\d+,\\sSkipped:\\s\\d+,\\sPending:\\s\\d+,\\sInconclusive:\\s\\d+\\s$"
                    }
                }
            ]
        },
        {
            "label": "Watch.Project",
            "type": "shell",
            "command": [
                "Write-Host 'Watching Project';",
                "Import-Module -Name Pester;",
                "Import-Module -Name PowerShellGuard;",
                "New-Guard -Path \"${workspaceRoot}\" -PathFilter \"*.ps1\" -MonitorSubdirectories -TestPath \"${workspaceRoot}\\Tests\" -TestCommand {Write-Host \"Invoking Watch.Project\"; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true}} -Wait;"
            ],
            "isBackground": true,
            "problemMatcher": [
                {
                    "owner": "Watch.Project",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                            "message": 1
                        },
                        {
                            "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                            "file": 1,
                            "line": 2
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^Invoking Watch\\.Project$",
                        "endsPattern": "^Tests\\sPassed:\\s\\d+,\\sFailed:\\s\\d+,\\sSkipped:\\s\\d+,\\sPending:\\s\\d+,\\sInconclusive:\\s\\d+\\s$"
                    }
                }
            ]
        },
        {
            "label": "Watch.Tests.Single",
            "type": "shell",
            "command": [
                "Write-Host 'Watching Tests';",
                "Import-Module -Name Pester;",
                "Import-Module PowerShellGuard;",
                "(gci \"${workspaceRoot}\\Tests\\*.ps1\").Foreach{ New-Guard -Path $_.FullName -TestPath $_.FullName -TestCommand {Write-Host \"Invoking Watch.Tests.Single\"; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true}} -ErrorAction SilentlyContinue};",
                "Wait-Guard"
            ],
            "isBackground": true,
            "problemMatcher": [
                {
                    "owner": "Watch.Tests.Single",
                    "fileLocation": "relative",
                    "pattern": [
                        {
                            "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                            "message": 1
                        },
                        {
                            "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                            "file": 1,
                            "line": 2
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^Invoking Watch\\.Tests\\.Single$",
                        "endsPattern": "^Tests\\sPassed:\\s\\d+,\\sFailed:\\s\\d+,\\sSkipped:\\s\\d+,\\sPending:\\s\\d+,\\sInconclusive:\\s\\d+\\s$"
                    }
                }
            ]
        },
        {
            "label": "Watch.Tests",
            "type": "shell",
            "command": [
                "Write-Host 'Watching Tests';",
                "Import-Module -Name Pester;",
                "Import-Module PowerShellGuard;",
                "(gci \"${workspaceRoot}\\Tests\\*.ps1\").Foreach{ New-Guard -Path $_.FullName -TestPath $_.FullName -TestCommand {Write-Host \"Invoking Watch.Tests\"; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true}} -ErrorAction SilentlyContinue};",
                "Wait-Guard"
            ],
            "isBackground": true,
            "problemMatcher": [
                {
                    "owner": "Watch.Tests",
                    "fileLocation": "relative",
                    "pattern": [
                        {
                            "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                            "message": 1
                        },
                        {
                            "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                            "file": 1,
                            "line": 2
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^Invoking Watch\\.Tests$",
                        "endsPattern": "^Tests\\sPassed:\\s\\d+,\\sFailed:\\s\\d+,\\sSkipped:\\s\\d+,\\sPending:\\s\\d+,\\sInconclusive:\\s\\d+\\s$"
                    }
                }
            ]
        }
    ]
}